apply plugin: 'com.android.application'
/*apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'*/
android {
    signingConfigs {
        signConfig {
            keyAlias 'sad-basic'
            keyPassword '123456'
            storeFile file('sad-basic-release.jks')
            storePassword '123456'
        }
    }

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.sad.basic.demo"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 10
        versionName '4.0.0'
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ moduleName : project.getName() ]
            }
        }
        /*ndk {
            moduleName "lib-c-kernel"       //生成的so名字
            abiFilters "x86", "armeabi-v7a"//, "x86","arm64-v8a","x86_64" //输出指定三种abi体系结构下的so库，目前可有可无。注释防止librs.so无法拷贝
            //cFlags "-DANDROID_NDK -D_DEBUG DNULL=0"   // Define some macros
            ldLibs "EGL",
                    //"GLESv3",
                    "dl",
                    "log"	   // Link with these libraries!
            stl "stlport_static"					  // Use shared stlport library
        }
        externalNativeBuild {
            cmake {
                cppFlags "-frtti -fexceptions"
                abiFilters "x86"
                //abiFilters 'armeabi-v7a', 'x86'
            }
        }*/
        /*splits {
            abi {
                enable true
                reset()
                include "x86", "armeabi-v7a", "armeabi-v8a", "x86_64"
            }
        }*/
        //Error:ABIs [arm-v7a] are not supported for platform. Supported ABIs are [armeabi-v7a, arm64-v8a, x86, x86_64].
        externalNativeBuild {
            cmake {
                cppFlags "-frtti -fexceptions"
                abiFilters  "arm64-v8a"//"x86","arm64-v8a","armeabi-v7a"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.signConfig
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    /*packagingOptions{
        doNotStrip '*//*mips*//*.so'
        doNotStrip '*//*mips64*//*.so'
    }*/
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //testImplementation 'junit:junit:4.12'
    //androidTestImplementation 'com.android.support.test:runner:latest.release'
    //androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    //compile 'com.sad.core.async:sad-async:latest.release'
    //api "com.github.lucifinilsu.sad-architecture-core:sad-architecture-annotation:1.3.1Beta6"
    //api "com.github.lucifinilsu.sad-basic:sad-basic-test:0.3.6-alpha1"
    api 'androidx.appcompat:appcompat:' + rootProject.ext.androidxAppCompatVersion
    //api project(':sad-lib-basic')

}
